---
import Description from '../components/Description.astro'
import { motion } from 'motion/react'
import { getTitleAnimation } from '../animations'

import WorkspacesVideo from '../assets/Workspaces.webm'
import GlanceVideo from '../assets/Glance.webm'
import CompactModeVideo from '../assets/CompactMode.webm'
import SplitViewsVideo from '../assets/SplitViews.webm'

import Video from './Video.astro'

const {
  title1 = 'Productivity',
  title2 = 'at',
  title3 = 'its best',
} = Astro.props
---

<section
  id="Features"
  class="relative flex w-full flex-col px-4 text-start md:px-24 lg:mx-auto lg:w-3/4 lg:px-0 lg:py-36"
>
  <Description class="mb-2 text-6xl font-bold">
    <motion.span client:load {...getTitleAnimation(0.2)}>
      {title1}
    </motion.span>
    <motion.span client:load {...getTitleAnimation(0.4)}>
      {title2}
    </motion.span>
    <motion.span client:load {...getTitleAnimation(0.6)}>
      {title3}
    </motion.span>
  </Description>
  <motion.p client:load {...getTitleAnimation(0.6)} className="lg:w-1/2">
    Zen is packed with features that help you stay productive and focused.
    Browsers should be tools that help you get things done, not distractions
    that keep you from your work.
  </motion.p>
  <div
    class="mb-12 mt-6 flex flex-col justify-between gap-2 lg:mb-0 lg:flex-row"
  >
    <div
      id="features-list"
      class="relative flex w-full flex-col gap-3 md:flex-row lg:w-1/3 lg:flex-col"
    >
      <motion.div
        client:load
        {...getTitleAnimation()}
        className="feature"
      >
        <Description class="text-2xl font-bold">Workspaces</Description>
        <Description>
          Organize your tabs into Workspaces to keep your projects separate and
          organized, and switch between them with ease.
        </Description>
      </motion.div>
      <motion.div
        client:load
        {...getTitleAnimation()}
        className="feature"
      >
        <Description class="text-2xl font-bold">Compact Mode</Description>
        <Description>
          Zen's Compact Mode gives you more screen real estate by hiding the tab
          bar when you don't need it, and showing it when you do.
        </Description>
      </motion.div>
      <motion.div
        client:load
        {...getTitleAnimation()}
        className="feature"
      >
        <Description class="text-2xl font-bold">Glance</Description>
        <Description>
          Zen's Glance lets you preview tabs without switching to them, so you
          can quickly find the page you're looking for.
        </Description>
      </motion.div>
      <motion.div
        client:load
        {...getTitleAnimation()}
        className="feature"
      >
        <Description class="text-2xl font-bold">Split View</Description>
        <Description>
          Zen's Split View lets you view up to 4 tabs side by side, so you can
          compare information or multitask easily.
        </Description>
      </motion.div>
    </div>
    <div class="relative w-3/5">
      <Video
        autoplay
        loop
        src=""
        muted
        playsinline
        preload="none"
        class="feature-video"
        src={WorkspacesVideo}
      />
      <Video
        autoplay
        loop
        src=""
        muted
        playsinline
        preload="none"
        class="feature-video"
        src={CompactModeVideo}
      />
      <Video
        autoplay
        loop
        src=""
        muted
        playsinline
        preload="none"
        class="feature-video"
        src={GlanceVideo}
      />
      <Video
        autoplay
        loop
        src=""
        muted
        playsinline
        preload="none"
        class="feature-video"
        src={SplitViewsVideo}
      />
    </div>
  </div>
</section>
<script>
  const features = document.querySelectorAll('.feature')

  function changeToFeature({
    target,
  }: {
    target: HTMLElement | undefined | null
  }) {
    target = target?.closest('.feature')
    if (!target) return
    const index = Array.from(features).indexOf(target)
    if (index === -1) return
    const video = document.querySelector(`.feature-video:nth-child(${index + 1})`) as HTMLVideoElement
    for (const vid of document.querySelectorAll('.feature-video') as NodeListOf<HTMLVideoElement>) {
      vid.style.opacity = '0'
      vid.pause()
    }
    video.style.opacity = '1'
    // Go back to the start of the video
    video.currentTime = 0
    video.play()
  }

  for (const feature of features) {
    feature.addEventListener('click', changeToFeature as any)
  }

  changeToFeature({ target: features[0] as any })
</script>
<style>
  .feature {
    @apply w-full cursor-pointer select-none rounded-lg p-4 hover:bg-[rgba(0,0,0,.03)];
    transition: background-color 0.2s;
    &[active] {
      @apply md:bg-[rgba(0,0,0,.05)];
    }
  }

  .feature-video {
    @apply hidden rounded-3xl shadow-md lg:absolute lg:mx-auto lg:block lg:w-full dark:opacity-80 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2;
  }

  /* Dont animate translation on small screens */
  @media (max-width: 1024px) {
    .feature-video {
      transform: none !important;
    }
  }
</style>
